{"version":3,"sources":["Demo.jsx","App.js","serviceWorker.js","index.js","img/planecrop.png"],"names":["formatDegrees","degrees","isLongitude","concat","getDirection","Demo","props","this","react_default","a","createElement","style","fontSize","fontWeight","margin","isGeolocationAvailable","isGeolocationEnabled","coords","className","latitude","longitude","altitude","React","Component","App","geolocated","positionOptions","enableHighAccuracy","userDecisionTimeout","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","customQuery","getInnerRef","bind","assertThisInitialized","getLocation","ref","innerRef","padding-left","padding-right","margin-bottom","padding-bottom","src","planecrop","alt","index_es","app","credentials","componentId","dataField","value","lon","lat","geo_distance","distance","location","marginBottom","autosuggest","fieldWeights","fuzziness","highlightField","placeholder","sortBy","pagination","size","react","and","onData","vacaresults","res","price","toFixed","snip","description","substring","dest","split","url","href","departmonth","date","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.708bf7ae.chunk.js","sourcesContent":["import React from \"react\";\nimport { geolocated, geoPropTypes } from 'react-geolocated';\n\nconst getDirection = (degrees, isLongitude) =>\n    degrees > 0 ? (isLongitude ? \"E\" : \"N\") : isLongitude ? \"W\" : \"S\";\n\n// addapted from http://stackoverflow.com/a/5786281/2546338\nconst formatDegrees = (degrees, isLongitude) =>\n    `${0 | degrees}Â° ${0 |\n        (((degrees < 0 ? (degrees = -degrees) : degrees) % 1) * 60)}' ${0 |\n        (((degrees * 60) % 1) * 60)}\" ${getDirection(degrees, isLongitude)}`;\n\nclass Demo extends React.Component {\n    render() {\n        const { props } = this;\n        return (\n            <div\n                style={{\n                    fontSize: \"large\",\n                    fontWeight: \"bold\",\n                    margin: \"2rem\",\n                }}\n            >\n                {!props.isGeolocationAvailable ? (\n                    <div>Your browser does not support Geolocation.</div>\n                ) : !props.isGeolocationEnabled ? (\n                    <div>Geolocation is not enabled.</div>\n                ) : props.coords ? (\n                    <div>\n                        You are at{\" \"}\n                        <span className=\"coordinate\">\n                            {formatDegrees(props.coords.latitude, false)}\n                        </span>,{\" \"}\n                        <span className=\"coordinate\">\n                            {formatDegrees(props.coords.longitude, true)}\n                        </span>\n                        {props.coords.altitude ? (\n                            <span>\n                                , approximately {props.coords.altitude} meters\n                                above sea level\n                            </span>\n                        ) : null}.\n                    </div>\n                ) : (\n                    <div>Getting the location data&hellip;</div>\n                )}\n            </div>\n        );\n    }\n}\n\nDemo.propTypes = { ...Demo.propTypes, ...geoPropTypes };\n\nexport default geolocated({\n    positionOptions: {\n        enableHighAccuracy: false,\n    },\n    userDecisionTimeout: 5000,\n})(Demo);\n","import React, { Component } from 'react';\nimport { ReactiveBase, ReactiveList,DataSearch, DataController} from '@appbaseio/reactivesearch';\nimport './App.css';\nimport planecrop from './img/planecrop.png';\nimport Demo from \"./Demo.jsx\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.getInnerRef = this.getInnerRef.bind(this);\n        this.getLocation = this.getLocation.bind(this);\n    }\n\n    innerRef;\n    getInnerRef(ref) {\n        this.innerRef = ref;\n    }\n\n    getLocation() {\n        this.innerRef && this.innerRef.getLocation();\n    }\n\trender() {\n\t\tconst { getInnerRef, getLocation } = this;\n\t\treturn (\n\t\t    <div className=\"container\" style={{\"padding-left\":\"10%\", \"padding-right\":\"10%\"}}>\n\t\t        {/* \n\t\t        <article style={{ textAlign: \"center\" }}>\n\t\t                <Demo onError={error => console.log(error)} ref={getInnerRef} />\n\t\t                <button\n\t\t                    className=\"pure-button pure-button-primary\"\n\t\t                    onClick={getLocation}\n\t\t                    type=\"button\"\n\t\t                >\n\t\t                    Get location\n\t\t                </button>\n\t            </article>\n\t            */}\n\t\t        <div className=\"row\" style={{\"margin-bottom\":\"-30px\"}}>\n\t\t          <div className=\"col align-self-center\">\n\t\t            <h1>Get Spirited Away</h1>\n\t\t          </div>\n\t\t        </div>\n\t\t        <div className=\"row\" style={{\"padding-bottom\":\"20px\"}}>\n\t\t          <div className=\"col align-self-center\" >\n\t\t           <img src={planecrop} alt=\"plane\"></img>\n\t\t          </div>\n\t        \t</div>\n\t        \t\n\t\t\t\t<ReactiveBase\n\t\t\t\t\tapp=\"getspiritedaway_ver6\"\n\t\t\t\t\tcredentials=\"avat63oQV:3e28e807-5ddc-475d-9b85-7735b0f21794\">\n\t\t\t\t\t<DataController\n\t\t\t\t\t\tcomponentId=\"geoloc\"\n\t\t\t\t\t\tdataField='location'\n\t\t\t\t\t\tvalue={\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tlon:150.74,\n\t\t\t\t\t\t\t\tlat:-33.5995\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcustomQuery={(value, props) => ({ geo_distance: { distance:'60mi','location':{'lon':'150.74','lat':'-33.5995'}}})}\n\t\t\t\t\t/>\n\t\t\t\t\t<DataSearch\n\t\t\t\t\t  className=\"btrow\"\n\t\t\t\t\t  style={{\"padding-left\":\"10%\", \"padding-right\":\"10%\",\"marginBottom\":\"20\"}}\n\t\t\t\t\t  autosuggest={false}\n\t\t\t\t\t  componentId=\"search\"\n\t\t\t\t\t  dataField={[\n\t\t\t\t\t    'description',\n\t\t\t\t\t    'description.autosuggest',\n\t\t\t\t\t    'description.keyword'\n\t\t\t\t\t  ]}\n\t\t\t\t\t  fieldWeights={[\n\t\t\t\t\t    1,\n\t\t\t\t\t    1,\n\t\t\t\t\t    1\n\t\t\t\t\t  ]}\n\t\t\t\t\t  fuzziness={0}\n\t\t\t\t\t  highlightField={[\n\t\t\t\t\t    'description'\n\t\t\t\t\t  ]}\n\t\t\t\t\t  placeholder=\"put in your ideal vacation\"\n\t\t\t\t\t/>\n\t\t\t\t\t<div className=\"col\">\n\t\t\t\t\t\t<ReactiveList\n\t\t\t\t\t\t\tcomponentId=\"result\"\n\t\t\t\t\t\t\tdataField=\"price\"\n\t\t\t\t\t\t\tsortBy=\"asc\"\n\t\t\t\t\t\t\tpagination={true}\n\t\t\t\t\t\t\tsize={10}\n\t\t\t\t\t\t\treact={{\n\t\t\t\t\t\t    \tand: [\n\t\t\t\t\t\t    \t'search',\n\t\t\t\t\t\t        'geoloc'\n\t\t\t\t\t\t    \t]\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonData={this.vacaresults}\n\t\t\t\t\t\t\n\t\t\t\t\t\t/>\t\n\t\t\t\t\t</div>\n\t\t\t\t</ReactiveBase>\n\t\t\t</div>\n\t\t);\n\t}\n\n\n\tvacaresults(res){\n\t\tvar price=res.price.toFixed(0);\n\t\tvar snip=res.description.substring(0,200)+\"...\"\n\t\tvar dest=res.dest.split(',')[0]\n\t\tdest=dest.split('/')[0]\n\t\treturn(\n\t\t\t\t<div className=\"flex result-content\"> \n\t\t\t\t<img className=\"img url-image\" src={res.url} alt=\"GSA\" href={res.url}/>\n\t\t\t\t<div className=\"details result-header\">\n\t\t\t\t<div className=\"info1 city-header\">{dest}\n\t\t\t\t<div className=\"info1 date-header\">{res.departmonth}{res.date}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"info2 price-header\">${price}</div>\n\t\t\t\t<div className=\"result-footer\">\n\t\t\t\t<a href={res.url}>{snip}</a>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n\n   customQuery=function(){\n   \treturn{\n   \t\t\n   \t}\n   }\n\n}\n\n  \n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/planecrop.a28fcd19.png\";"],"sourceRoot":""}